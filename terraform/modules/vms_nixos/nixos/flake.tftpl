{
  inputs = {
    nixpkgs.url = "nixpkgs/nixos-unstable";

    disko = {
      url = github:nix-community/disko;
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  outputs = { nixpkgs, disko, ... }: {
    %{ for host, values in nodes ~}
    nixosConfigurations.${host} = let
      hostname = "${host}";
      hostId = "${values.host_id}";
      zfs-init-zpool = ${values.danger_wipe_zfs_disks_and_initialize};

      zfs-disks = [
        %{ for disk_name, device in values.zfs_disks ~}
        { name = "${disk_name}"; device = "${device}"; }
        %{ endfor ~}
      ];
    in nixpkgs.lib.nixosSystem {
      system = "x86_64-linux";
      specialArgs = {
        inherit hostname hostId zfs-disks zfs-init-zpool;
      };
      modules = [
        ./base.nix
        disko.nixosModules.disko
        ./disk-config.nix
        {
          _module.args.disks = [ "/dev/vda" ];
          boot.loader.grub = {
            devices = [ "/dev/vda" ];
          };
        }
      ];
    };
    %{ endfor ~}
  };
}
