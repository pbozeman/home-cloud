# use env vars rather than a config map to pass in values becaause
# zigbee2mqtt tries to ovewrite the config, which is not allowed
# by k8s
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    app: "{{ .Chart.Name }}"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
    spec:
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          ports:
            - containerPort: {{ .Values.container.port }}
          env:
            # https://github.com/Koenkk/zigbee2mqtt/discussions/13584
            - name: ZIGBEE2MQTT_CONFIG_MQTT_SERVER
              value: "{{ .Values.mqtt_server }}"
            - name: ZIGBEE2MQTT_CONFIG_HOMEASSISTANT
              value: "true"
            - name: ZIGBEE2MQTT_CONFIG_PERMIT_JOIN
              value: "false"
            - name: ZIGBEE2MQTT_CONFIG_SERIAL_PORT
              value: "{{ .Values.serial_port }}"
          volumeMounts:
            - name: persistent-storage
              mountPath: /app/data
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: "{{ .Chart.Name }}-pvc"
